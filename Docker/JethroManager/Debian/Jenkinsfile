
// build job: 'Jethro-Manager-Build-Debian', 
parameters: [string(name: 'RPM_URL', value: 'http://jethro-gui.s3.amazonaws.com/builds/master/jethromng-1.5.0-187p.x86_64.rpm'), string(name: 'Storage', value: 'Posix'), [$class: 'NodeParameterValue', name: 'GUI-Builder', labels: ['GUI-Builder'], nodeEligibility: [$class: 'AllNodeEligibility']], string(name: 'Image_type', value: 'GUI_BUILDER')]

node('GUI-Builder') {

    try {
        
        cleanWs()

        withEnv([]) {

            stage('Get Sources') {

                checkout(
                    [$class: 'GitSCM', branches: [[name: '*/master']],
                    browser: [$class: 'GithubWeb', repoUrl: 'https://github.com/JethroDataATE/DevOps'],
                    doGenerateSubmoduleConfigurations: false,
                    extensions: [
                        [$class: 'SparseCheckoutPaths', sparseCheckoutPaths: [[path: 'Docker/JethroManager']]]
                    ],
                    submoduleCfg: [],
                    userRemoteConfigs: [[credentialsId: '7cf4f71c-34af-4252-be92-2a445e7b0e18', url: 'https://github.com/JethroDataATE/DevOps']]]
                )
                    
            }

            stage('Build Debian') {
                
                echo 'Cleanup previous dockers...'
                sh "docker stop \$(docker ps -a -q) || echo "
                sh "docker rm \$(docker ps -a -q) || echo "
                sh "docker rmi \$(docker images -q) -f || echo "
                
                echo 'Getting Ubuntu Docker and converting RPM to DEB'
                sh "docker login --username=iziko --password=pass@word3"
                echo ''
                sh "mkdir deb_folder -m 777"
                sh "docker run -e RPM_URL=$RPM_URL -v /deb_folder:/jethro_volume jethrodata/jethromng-build:ubunto14.04"   
            }

            stage('Deploy Debian') {
                echo 'deploying debian to s3'

                sh "echo \$(pwd)"
                sh "echo \$(ls)"
                

                def deploymentTarget
                if (RPM_URL.indexOf("https://") > -1) {
                    deploymentTarget = RPM_URL.substring(8,RPM_URL.lastIndexOf("/"))
                }
                else {
                    deploymentTarget = RPM_URL.substring(7,RPM_URL.lastIndexOf("/"))
                } 
                echo "deploymentTarget: $deploymentTarget"
                
                def bucketName = deploymentTarget.substring(0, deploymentTarget.indexOf("."))
                echo "bucketName: $bucketName"
                
                def bucketPath = ""
                if (deploymentTarget.indexOf("/") > -1) {
                    bucketPath = deploymentTarget.substring(deploymentTarget.indexOf("/") + 1)
                }
                echo "bucketPath: $bucketPath"
                
                sh "Docker/JethroManager/Debian/deploy_to_s3.sh /deb_folder $bucketName $bucketPath updateLatest .deb"
                // def targetPath = "s3://$bucketName$bucketPath"
                // echo "targetPath: $targetPath"
                
                // sh "aws s3 cp /deb_folder $targetPath --recursive --acl public-read"
            }
        }

        
        currentBuild.result = 'SUCCESS'

    }
    catch (any) {
        echo "Build faild: $any"
        currentBuild.result = 'FAILURE'
    }
    // finally {
    //         def buildres = currentBuild.result;
    //         echo "build res: $buildres"
    //         emailext attachLog: true, 
    //         body: "See ${env.BUILD_URL}", 
    //         compressLog: true,
    //         mimeType: 'text/html',
    //         recipientProviders: [[$class: 'DevelopersRecipientProvider']],
    //         replyTo: 'ui@jethrodata.com',
    //         subject: "Jethro docker build has finished with ${currentBuild.result}",
    //         to: 'ui@jethrodata.com'
    // }
}
        